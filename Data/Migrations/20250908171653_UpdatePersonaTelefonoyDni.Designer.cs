// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Gym.Data;

#nullable disable

namespace Proyecto_Gym.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250908171653_UpdatePersonaTelefonoyDni")]
    partial class UpdatePersonaTelefonoyDni
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Gym.Domain.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EntrenadorId")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("dni")
                        .HasColumnType("bigint");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genero")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pago")
                        .HasColumnType("bit");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntrenadorId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Ejercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RutinaId")
                        .HasColumnType("int");

                    b.Property<int>("nombreEJ")
                        .HasColumnType("int");

                    b.Property<int>("repeticiones")
                        .HasColumnType("int");

                    b.Property<int>("series")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RutinaId");

                    b.ToTable("Ejercicio");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Entrenador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("dni")
                        .HasColumnType("bigint");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genero")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entrenadores");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Rutina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Cliente", b =>
                {
                    b.HasOne("Proyecto_Gym.Domain.Entrenador", null)
                        .WithMany("clientes")
                        .HasForeignKey("EntrenadorId");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Ejercicio", b =>
                {
                    b.HasOne("Proyecto_Gym.Domain.Rutina", null)
                        .WithMany("ejercicios")
                        .HasForeignKey("RutinaId");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Rutina", b =>
                {
                    b.HasOne("Proyecto_Gym.Domain.Cliente", null)
                        .WithMany("rutinaxdia")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Cliente", b =>
                {
                    b.Navigation("rutinaxdia");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Entrenador", b =>
                {
                    b.Navigation("clientes");
                });

            modelBuilder.Entity("Proyecto_Gym.Domain.Rutina", b =>
                {
                    b.Navigation("ejercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
